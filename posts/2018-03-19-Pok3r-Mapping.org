#+date: <2018-03-19 00:00>
#+title: Pok3r Mapping

Mapping reference that I'm using on my pok3r keyboard.

To map a key:

- switch to desired layer with =fn + {<,>,?}=.
- =fn + R_Ctrl= to enter programming mode
- enter key you want to remap
- enter key you want to map to
- =pn= to map
- =fn + R_Ctrl= to exit

You can continue mapping in programming mode by hitting key combinations
followed by =pn=.

** [[#h-c834be12-6d81-46c9-952f-d5d712b46ce0][Swaps]]
:PROPERTIES:
:CUSTOM_ID: h-c834be12-6d81-46c9-952f-d5d712b46ce0
:END:

#+begin_src text
esc -> fn + esc
fn + esc -> esc

l_meta -> l_super
l_super -> l_meta

\Â -> backspace
backspace -> \

capslock -> left ctrl
left ctrl -> capslock
#+end_src

** [[#h-e8380d65-0a26-4e42-81f1-03e97655a171][Right control -> Function key]]
:PROPERTIES:
:CUSTOM_ID: h-e8380d65-0a26-4e42-81f1-03e97655a171
:END:

note: this effects only the layer you are on, fn transforms into super
after this.

- unplug keyboard, flip switch 4
- hit fn, then r_ctrl
- hit pn, pn to keep position
- turn off switch 4

and now we can have nice vim-like arrow keys:

#+begin_src text
  fn + h -> fn + j fn + j -> fn + k fn + k -> fn + i
  fn + l -> fn + l
#+end_src

swap (the now available) right win alt:

#+begin_src text
  r_meta -> r_super r_super -> r_meta
#+end_src

When away, here is an autohotkey script to achieve the same (minus the
arrow keys):

#+begin_src ahk
  #SingleInstance force

  Capslock::Ctrl

  ::Backspace Backspace::\\

  +BS:: KeyWait, Shift Send, {|} Return

  LWin::LAlt LAlt::LWin

  RWin::RAlt RAlt::RWin
#+end_src
